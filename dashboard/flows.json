[
    {
        "id": "56bf86fa1e00f568",
        "type": "tab",
        "label": "Read MQTT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "94cb9d4b04c73554",
        "type": "mqtt in",
        "z": "56bf86fa1e00f568",
        "name": "",
        "topic": "HAMK/boat/counter",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "cac50668a473cfc4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 80,
        "wires": [
            [
                "7b2bb3fe6fd80fa3",
                "4e952f48bf3ad92c"
            ]
        ]
    },
    {
        "id": "7b2bb3fe6fd80fa3",
        "type": "debug",
        "z": "56bf86fa1e00f568",
        "name": "raw MQTT message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 80,
        "wires": []
    },
    {
        "id": "cdd8194d85267aa5",
        "type": "debug",
        "z": "56bf86fa1e00f568",
        "name": "translated MQTT message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 120,
        "wires": []
    },
    {
        "id": "4e952f48bf3ad92c",
        "type": "function",
        "z": "56bf86fa1e00f568",
        "name": "translator",
        "func": "var hexString = msg.payload;\nvar asciiString = \"\";\n\nfor(var i = 0; i<hexString.length; i+=2){\n    asciiString += String.fromCharCode(parseInt(hexString.substr(i,2),16));\n}\nmsg.payload = asciiString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 120,
        "wires": [
            [
                "cdd8194d85267aa5",
                "64c5148669c67edc"
            ]
        ],
        "info": "function to translate hexadecimal (from LoRaWAN messages) to ascii string"
    },
    {
        "id": "64c5148669c67edc",
        "type": "function",
        "z": "56bf86fa1e00f568",
        "name": "counter",
        "func": "//get global vars\nvar counterS = global.get(\"counterS\");\nvar counterM = global.get(\"counterM\");\nvar counterP = global.get(\"counterP\");\nvar counterStot = global.get(\"counterStot\");\nvar counterMtot = global.get(\"counterMtot\");\nvar counterPtot = global.get(\"counterPtot\");\nvar counterTot = global.get(\"counterTot\");\nvar counterDay = global.get(\"counterDay\");\nvar heartbeat = global.get(\"heartbeat\");\n\n//example input : \"S5,M0,P0\" / \"00\"\nvar data = msg.payload;\nnode.warn(\"my var data = \" + data);\nif(data.length > 2){ //ignore the heartbeat signal\n    var values = data.split(','); //split string on comma's\n    node.warn(\"my var values = \" + values);\n    //example values : [\"S5\", \"M0\", \"P0\"]\n    //update individual counters\n    counterS += parseInt(values[0].substring(1));\n    counterStot += parseInt(values[0].substring(1));\n    global.set(\"counterS\", counterS);\n    global.set(\"counterStot\", counterStot);\n\n    counterM += parseInt(values[1].substring(1));\n    counterMtot += parseInt(values[1].substring(1));\n    global.set(\"counterM\", counterM);\n    global.set(\"counterMtot\", counterMtot);\n\n    counterP += parseInt(values[2].substring(1));\n    counterPtot += parseInt(values[2].substring(1));\n    global.set(\"counterP\", counterP);\n    global.set(\"counterPtot\", counterPtot);\n    \n    //update total counters\n    var sum = parseInt(values[0].substring(1)) + parseInt(values[1].substring(1)) + parseInt(values[2].substring(1));\n    counterDay += sum;\n    counterTot += sum;\n    global.set(\"counterTot\", counterTot);\n    global.set(\"counterDay\", counterDay);\n}\nelse{ //handle heartbeat\n    heartbeat = new Date().toUTCString();\n    //var heartbeat_str = heartbeat.toString();\n    global.set(\"heartbeat\", heartbeat);\n}\n//update global variables\nmsg.payload = {\n    counterS: counterS.toString(),\n    counterM: counterM.toString(),\n    counterP: counterP.toString(),\n    counterStot: counterStot.toString(),\n    counterMtot: counterMtot.toString(),\n    counterPtot: counterPtot.toString(),\n    counterDay: counterDay.toString(),\n    counterTot: counterTot.toString(),\n    heartbeat: heartbeat\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 160,
        "wires": [
            [
                "01a0df8a37528cec",
                "50e73cf1a28f1fa8",
                "6080b6ea9239b77b",
                "f1a47db8afb99907",
                "391259ef7eaf246f",
                "1d1019f857b28a7e",
                "7460c5816321732a",
                "25ab709fd949cc47",
                "6c425ea0fbce4cb9",
                "dc6f171ef9dda829",
                "72736a98193a5156",
                "3e04bab5a1d9c730"
            ]
        ],
        "info": "function to process data and add values to correct counter objects"
    },
    {
        "id": "01a0df8a37528cec",
        "type": "debug",
        "z": "56bf86fa1e00f568",
        "name": "read counters",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 160,
        "wires": []
    },
    {
        "id": "1cb301aad43cf0d4",
        "type": "inject",
        "z": "56bf86fa1e00f568",
        "name": "manual mqtt data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "S1,M1,P0",
        "payloadType": "str",
        "x": 220,
        "y": 380,
        "wires": [
            [
                "64c5148669c67edc"
            ]
        ]
    },
    {
        "id": "f1a47db8afb99907",
        "type": "ui_text",
        "z": "56bf86fa1e00f568",
        "group": "9bd7c73e0058dabf",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "small boats",
        "format": "{{msg.payload.counterS}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 910,
        "y": 280,
        "wires": []
    },
    {
        "id": "391259ef7eaf246f",
        "type": "ui_text",
        "z": "56bf86fa1e00f568",
        "group": "9bd7c73e0058dabf",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "medium boats",
        "format": "{{msg.payload.counterM}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 920,
        "y": 320,
        "wires": []
    },
    {
        "id": "1d1019f857b28a7e",
        "type": "ui_text",
        "z": "56bf86fa1e00f568",
        "group": "9bd7c73e0058dabf",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "paddle boats",
        "format": "{{msg.payload.counterP}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 910,
        "y": 360,
        "wires": []
    },
    {
        "id": "7460c5816321732a",
        "type": "ui_text",
        "z": "56bf86fa1e00f568",
        "group": "9bd7c73e0058dabf",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DAILY TOTAL",
        "format": "{{msg.payload.counterDay}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "25",
        "color": "#000000",
        "x": 920,
        "y": 400,
        "wires": []
    },
    {
        "id": "72736a98193a5156",
        "type": "ui_text",
        "z": "56bf86fa1e00f568",
        "group": "9bd7c73e0058dabf",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "SUMMER TOTAL",
        "format": "{{msg.payload.counterTot}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "25",
        "color": "#000000",
        "x": 930,
        "y": 620,
        "wires": []
    },
    {
        "id": "25ab709fd949cc47",
        "type": "ui_text",
        "z": "56bf86fa1e00f568",
        "group": "9bd7c73e0058dabf",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "total small boats",
        "format": "{{msg.payload.counterStot}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 920,
        "y": 500,
        "wires": []
    },
    {
        "id": "6c425ea0fbce4cb9",
        "type": "ui_text",
        "z": "56bf86fa1e00f568",
        "group": "9bd7c73e0058dabf",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "total medium boats",
        "format": "{{msg.payload.counterMtot}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 930,
        "y": 540,
        "wires": []
    },
    {
        "id": "dc6f171ef9dda829",
        "type": "ui_text",
        "z": "56bf86fa1e00f568",
        "group": "9bd7c73e0058dabf",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "total paddle boats",
        "format": "{{msg.payload.counterPtot}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 930,
        "y": 580,
        "wires": []
    },
    {
        "id": "0f6631b0617d0e55",
        "type": "ui_chart",
        "z": "56bf86fa1e00f568",
        "name": "chart summer boat per type",
        "group": "9bd7c73e0058dabf",
        "order": 10,
        "width": 0,
        "height": 0,
        "label": "total overview total boats per type",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "waiting for boats!",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 960,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "50e73cf1a28f1fa8",
        "type": "function",
        "z": "56bf86fa1e00f568",
        "name": "get total counters",
        "func": "//get global vars\nvar counterStot = global.get(\"counterStot\");\nvar counterMtot = global.get(\"counterMtot\");\nvar counterPtot = global.get(\"counterPtot\");\n\nvar m={\n    \"series\":[\"small boats\",\"medium boats\",\"paddle boats\"],\n    \"data\":[[counterStot],[counterMtot],[counterPtot]],\n    \"labels\":[\"total summer\"]\n};\nreturn {payload:[m]};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 660,
        "wires": [
            [
                "0f6631b0617d0e55"
            ]
        ]
    },
    {
        "id": "b46881e416ef9bc9",
        "type": "ui_chart",
        "z": "56bf86fa1e00f568",
        "name": "chart daily boat per type",
        "group": "9bd7c73e0058dabf",
        "order": 5,
        "width": 0,
        "height": 0,
        "label": "daily overview boats per type",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "waiting for boats!",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 950,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "6080b6ea9239b77b",
        "type": "function",
        "z": "56bf86fa1e00f568",
        "name": "get daily counters",
        "func": "//get global vars\nvar counterS = global.get(\"counterS\");\nvar counterM = global.get(\"counterM\");\nvar counterP = global.get(\"counterP\");\n\nvar m={\n    \"series\":[\"small boats\",\"medium boats\",\"paddle boats\"],\n    \"data\":[[counterS],[counterM],[counterP]],\n    \"labels\":[\"total today\"]\n};\nreturn {payload:[m]};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 440,
        "wires": [
            [
                "b46881e416ef9bc9"
            ]
        ]
    },
    {
        "id": "3e04bab5a1d9c730",
        "type": "ui_text",
        "z": "56bf86fa1e00f568",
        "group": "9bd7c73e0058dabf",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "last status update",
        "format": "{{msg.payload.heartbeat}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 930,
        "y": 220,
        "wires": []
    },
    {
        "id": "258b53c2265981b5",
        "type": "inject",
        "z": "56bf86fa1e00f568",
        "name": "manual mqtt heartbeat",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "00",
        "payloadType": "str",
        "x": 240,
        "y": 420,
        "wires": [
            [
                "64c5148669c67edc"
            ]
        ]
    },
    {
        "id": "7ae055af32130327",
        "type": "comment",
        "z": "56bf86fa1e00f568",
        "name": "simulated MQTT messages, for testing",
        "info": "",
        "x": 150,
        "y": 340,
        "wires": []
    },
    {
        "id": "258a53e198e04f29",
        "type": "comment",
        "z": "56bf86fa1e00f568",
        "name": "MQTT in",
        "info": "Raw MQTT is in hexadecimal (because of LoRaWAN messaging).",
        "x": 80,
        "y": 40,
        "wires": []
    },
    {
        "id": "cac50668a473cfc4",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt://iot.research.hamk.fi",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "9bd7c73e0058dabf",
        "type": "ui_group",
        "name": "Boats",
        "tab": "5b6b0e3c78adbd79",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5b6b0e3c78adbd79",
        "type": "ui_tab",
        "name": "Valkeakoski",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]